var Cars = React.createClass({
  loadCarsFromServer: function() {
    $.ajax({
      url: this.props.listOfCarsUrl,
      dataType: 'json',
      cache: false,
      success: function(data) {
        this.setState({data: data.carlist});
      }.bind(this),
      error: function(xhr, status, err) {
        console.error(this.props.listOfCarsUrl, status, err.toString());
      }.bind(this)
    });
  },
  getInitialState: function() {
    return {data: []};
  },
  componentDidMount: function() {
    this.loadCarsFromServer();
    // setInterval(this.loadCarsFromServer, this.props.pollInterval);
  },
  handleCarSubmit: function(car) {
    var cars = this.state.data;
    // Optimistically set an id on the new comment. It will be replaced by an
    // id generated by the server. In a production application you would likely
    // not use Date.now() for this and would have a more robust system in place.
    var newCars = cars.concat([car]);
    this.setState({data: newCars});

    car.id = Date.now();
    car.km = '100';
    car.email = 'altose87@gmail.com';
    car.car_type = 1;

    $.ajax({
      url: this.props.createCarUrl,
      dataType: 'json',
      type: 'POST',
      data: car,
      success: function(data) {
        this.setState({data: data});
      }.bind(this),
      error: function(xhr, status, err) {
        this.setState({data: cars});
        console.error(this.props.createCarUrl, status, err.toString());
      }.bind(this)
    });
  },
  render: function() {
    return (
      <div className="cars">
        <h1>Cars</h1>
        <CarsList data={this.state.data} />
        <CarForm onCarSubmit={this.handleCarSubmit} />
      </div>
    );
  }
});

// tutorial10.js
var CarsList = React.createClass({
  render: function() {
    var carNodes = this.props.data.map(function(car) {
      return (
        <CarDetail make={car.make} key={car.id}>
          {car.model}
          {car.year}
          {car.licenseplate}
        </CarDetail>
      );
    });
    return (
      <div className="venuesList">
        {carNodes}
      </div>
    );
  }
});

// tutorial15.js
var CarForm = React.createClass({
  getInitialState: function() {
    return {make: '', model: '', year: '', licenseplate: ''};
  },
  handleMakeChange: function(e) {
    this.setState({make: e.target.value});
  },
  handleModelChange: function(e) {
    this.setState({model: e.target.value});
  },
  handleYearChange: function(e) {
    this.setState({year: e.target.value});
  },
  handleLicenseplateChange: function(e) {
    this.setState({licenseplate: e.target.value});
  },
  handleSubmit: function(e) {
    e.preventDefault();
    var make = this.state.make.trim();
    var model = this.state.model.trim();
    var year = this.state.year.trim();
    var licenseplate = this.state.licenseplate.trim();
    if (!make || !model || !year || !licenseplate) {
      return;
    }
    this.props.onCarSubmit({make: make, model: model, year: year, licenseplate: licenseplate});
    this.setState({model: '', make: '', year: '', licenseplate: ''});
  },
  render: function() {
    return (
      <form className="carForm" onSubmit={this.handleSubmit}>
        <input type="text" placeholder="Make" value={this.state.make} onChange={this.handleMakeChange} />
        <input type="text" placeholder="Model" value={this.state.model} onChange={this.handleModelChange} />
        <input type="number" placeholder="year" value={this.state.year} onChange={this.handleYearChange} />
        <input type="text" placeholder="Licenseplate" value={this.state.licenseplate} onChange={this.handleLicenseplateChange} />
        <input type="submit" value="Post" />
      </form>
    );
  }
});

// tutorial7.js
var CarDetail = React.createClass({
  rawMarkup: function() {
    var md = new Remarkable();
    var rawMarkup = md.render(this.props.children.toString());
    return { __html: rawMarkup };
  },

  render: function() {
    return (
      <div className="car">
        <h2 className="carMake">
          {this.props.make}
        </h2>
        <span dangerouslySetInnerHTML={this.rawMarkup()} />
      </div>
    );
  }
});

// tutorial11.js
ReactDOM.render(
  <Cars listOfCarsUrl="http://dev.updatedcar.com/api/v1/carlist?id=2&email=altose87@gmail.com" createCarUrl="http://dev.updatedcar.com/api/v1/savecar" pollInterval={2000} />,
  document.getElementById('content')
);